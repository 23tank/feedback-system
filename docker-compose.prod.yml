version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: feedback-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: feedback_system
      MYSQL_USER: feedback_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - feedback-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: feedback-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: feedback_user
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: feedback_system
      JWT_SECRET: ${JWT_SECRET}
      PORT: 4000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - feedback-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: feedback-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE: http://localhost:4000
    depends_on:
      - backend
    networks:
      - feedback-network

  nginx:
    image: nginx:alpine
    container_name: feedback-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - feedback-network

volumes:
  db_data:

networks:
  feedback-network:
    driver: bridge
