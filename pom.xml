<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.feedback</groupId>
    <artifactId>feedback-management-system</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>Feedback Management System</name>
    <description>Full-stack feedback management system with React frontend and Express backend</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Node.js and npm versions -->
        <node.version>18.19.0</node.version>
        <npm.version>10.2.3</npm.version>
        
        <!-- Docker image properties -->
        <docker.registry>docker.io</docker.registry>
        <docker.namespace>your-dockerhub-username</docker.namespace>
        <docker.backend.image>${docker.namespace}/feedback-backend</docker.backend.image>
        <docker.frontend.image>${docker.namespace}/feedback-frontend</docker.frontend.image>
        <docker.tag>${project.version}</docker.tag>
        
        <!-- Build properties -->
        <skipTests>false</skipTests>
        <skipDocker>false</skipDocker>
    </properties>


    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Clean Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>

                <!-- Maven Resources Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>

                <!-- Maven Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>17</source>
                        <target>17</target>
                    </configuration>
                </plugin>

                <!-- Maven Surefire Plugin for testing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                    </configuration>
                </plugin>

                <!-- Frontend Maven Plugin for Node.js builds -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.15.0</version>
                    <configuration>
                        <nodeVersion>${node.version}</nodeVersion>
                        <npmVersion>${npm.version}</npmVersion>
                        <workingDirectory>frontend</workingDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>install node and npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>frontend npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>ci</arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>frontend npm test</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>test --silent</arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>frontend npm build</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>run build</arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Backend Maven Plugin for Node.js builds -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.15.0</version>
                    <configuration>
                        <nodeVersion>${node.version}</nodeVersion>
                        <npmVersion>${npm.version}</npmVersion>
                        <workingDirectory>backend</workingDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>backend install node and npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>backend npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>ci</arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>backend npm test</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>test --silent</arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Docker Maven Plugin -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.42.0</version>
                    <configuration>
                        <skip>${skipDocker}</skip>
                        <images>
                            <image>
                                <name>${docker.backend.image}:${docker.tag}</name>
                                <build>
                                    <dockerFile>backend/Dockerfile</dockerFile>
                                    <context>.</context>
                                </build>
                            </image>
                            <image>
                                <name>${docker.frontend.image}:${docker.tag}</name>
                                <build>
                                    <dockerFile>frontend/Dockerfile</dockerFile>
                                    <context>.</context>
                                    <args>
                                        <VITE_API_BASE>http://localhost:5000/api</VITE_API_BASE>
                                    </args>
                                </build>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-docker-images</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Maven Assembly Plugin for creating deployment packages -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/deployment.xml</descriptor>
                        </descriptors>
                        <finalName>feedback-system-${project.version}</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Clean plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>

            <!-- Resources plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Frontend plugin for frontend build -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <workingDirectory>frontend</workingDirectory>
                </configuration>
            </plugin>

            <!-- Docker plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>

            <!-- Assembly plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Development profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skipTests>true</skipTests>
                <skipDocker>true</skipDocker>
            </properties>
        </profile>

        <!-- CI/CD profile -->
        <profile>
            <id>ci</id>
            <properties>
                <skipTests>false</skipTests>
                <skipDocker>false</skipDocker>
            </properties>
        </profile>

        <!-- Production profile -->
        <profile>
            <id>prod</id>
            <properties>
                <skipTests>false</skipTests>
                <skipDocker>false</skipDocker>
                <docker.tag>latest</docker.tag>
            </properties>
        </profile>

        <!-- Docker-only profile -->
        <profile>
            <id>docker</id>
            <properties>
                <skipTests>true</skipTests>
                <skipDocker>false</skipDocker>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!-- JUnit for any Java tests (if needed) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
