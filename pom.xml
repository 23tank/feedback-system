<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.feedback</groupId>
    <artifactId>feedback-management-system</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>Feedback Management System</name>
    <description>Full-stack feedback management system with React frontend and Express backend</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Node.js and npm versions -->
        <node.version>v18.19.0</node.version>
        <npm.version>10.2.3</npm.version>

        <!-- Docker image properties -->
        <docker.registry>docker.io</docker.registry>
        <docker.namespace>your-dockerhub-username</docker.namespace>
        <docker.backend.image>${docker.namespace}/feedback-backend</docker.backend.image>
        <docker.frontend.image>${docker.namespace}/feedback-frontend</docker.frontend.image>
        <docker.tag>${project.version}</docker.tag>

        <!-- Build properties -->
        <skipTests>false</skipTests>
        <skipDocker>false</skipDocker>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Clean Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>

                <!-- Maven Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>17</source>
                        <target>17</target>
                    </configuration>
                </plugin>

                <!-- Maven Surefire Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                    </configuration>
                </plugin>

                <!-- Docker Maven Plugin -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.42.0</version>
                </plugin>

                <!-- Maven Assembly Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Frontend Maven Plugin (merged for frontend + backend) -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.15.0</version>
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
                </configuration>
                <executions>
                    <!-- Frontend -->
                    <execution>
                        <id>frontend install</id>
                        <goals><goal>install-node-and-npm</goal></goals>
                        <configuration>
                            <workingDirectory>frontend</workingDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>frontend npm install</id>
                        <goals><goal>npm</goal></goals>
                        <configuration>
                            <workingDirectory>frontend</workingDirectory>
                            <arguments>ci</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>frontend build</id>
                        <goals><goal>npm</goal></goals>
                        <configuration>
                            <workingDirectory>frontend</workingDirectory>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>

                    <!-- Backend -->
                    <execution>
                        <id>backend install</id>
                        <goals><goal>install-node-and-npm</goal></goals>
                        <configuration>
                            <workingDirectory>backend</workingDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>backend npm install</id>
                        <goals><goal>npm</goal></goals>
                        <configuration>
                            <workingDirectory>backend</workingDirectory>
                            <arguments>ci</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Docker plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipDocker}</skip>
                    <images>
                        <image>
                            <name>${docker.backend.image}:${docker.tag}</name>
                            <build>
                                <dockerFile>backend/Dockerfile</dockerFile>
                                <context>.</context>
                            </build>
                        </image>
                        <image>
                            <name>${docker.frontend.image}:${docker.tag}</name>
                            <build>
                                <dockerFile>frontend/Dockerfile</dockerFile>
                                <context>.</context>
                                <args>
                                    <VITE_API_BASE>http://localhost:5000/api</VITE_API_BASE>
                                </args>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- Assembly plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/deployment.xml</descriptor>
                    </descriptors>
                    <finalName>feedback-system-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation><activeByDefault>true</activeByDefault></activation>
            <properties>
                <skipTests>true</skipTests>
                <skipDocker>true</skipDocker>
            </properties>
        </profile>

        <profile>
            <id>ci</id>
            <properties>
                <skipTests>true</skipTests>
                <skipDocker>false</skipDocker>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <skipTests>false</skipTests>
                <skipDocker>false</skipDocker>
                <docker.tag>latest</docker.tag>
            </properties>
        </profile>

        <profile>
            <id>docker</id>
            <properties>
                <skipTests>true</skipTests>
                <skipDocker>false</skipDocker>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
